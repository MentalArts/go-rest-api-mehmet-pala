services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379" # Bind to localhost on host
    command: ["redis-server", "--requirepass", "password"]
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "ping"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_PORT: "5432"
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "password"
    depends_on:
      - postgres
      - redis
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./scripts:/scripts
    networks:
      - monitoring
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/metrics"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
    - "3000:3000"
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
    - monitoring
    depends_on:
    - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s



  # Optional: Load Testing Tool (e.g., k6)
  k6:
    image: grafana/k6:latest
    container_name: k6
    volumes:
      - ./scripts:/scripts
    command: ["run", "/scripts/load_test.js"]
    depends_on:
      - app

networks:
  monitoring:
    driver: bridge

volumes:
  postgres_data:
