basePath: /api/v1
definitions:
  models.Author:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      id:
        type: integer
      name:
        type: string
    required:
    - birth_date
    - name
    type: object
  models.Book:
    properties:
      author:
        $ref: '#/definitions/models.Author'
      author_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      isbn:
        type: string
      publication_year:
        type: integer
      reviews:
        items:
          $ref: '#/definitions/models.Review'
        type: array
      title:
        type: string
    required:
    - author_id
    - isbn
    - publication_year
    - title
    type: object
  models.Review:
    properties:
      book_id:
        type: integer
      comment:
        type: string
      date_posted:
        type: string
      id:
        type: integer
      rating:
        maximum: 5
        minimum: 1
        type: integer
    required:
    - book_id
    - comment
    - date_posted
    - rating
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: REST API for managing a book library
  title: Book Library API
  version: "1.0"
paths:
  /api/v1/books/{id}/reviews:
    get:
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: List all reviews for a specific book
      tags:
      - reviews
    post:
      consumes:
      - application/json
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Review to create
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Review'
      summary: Create a new review for a book
      tags:
      - reviews
  /api/v1/reviews/{id}:
    delete:
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a review
      tags:
      - reviews
  /authors:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List all authors
      tags:
      - authors
    post:
      consumes:
      - application/json
      parameters:
      - description: Author to create
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.Author'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Author'
      summary: Create a new author
      tags:
      - authors
  /authors/{id}:
    delete:
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an author
      tags:
      - authors
    get:
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
      summary: Get a single author by ID
      tags:
      - authors
    put:
      consumes:
      - application/json
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      - description: Author data
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
      summary: Update an existing author
      tags:
      - authors
  /books:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      parameters:
      - description: Book to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: Get a single book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: Update an existing book
      tags:
      - books
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
